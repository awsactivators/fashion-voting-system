// <auto-generated />
using System;
using FashionVote.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FashionVote.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250128011031_UpdateModels")]
    partial class UpdateModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("FashionVote.Models.Designer", b =>
                {
                    b.Property<int>("DesignerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DesignerId");

                    b.ToTable("Designers");
                });

            modelBuilder.Entity("FashionVote.Models.DesignerShow", b =>
                {
                    b.Property<int>("DesignerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DesignerId", "ShowId");

                    b.HasIndex("ShowId");

                    b.ToTable("DesignerShows");
                });

            modelBuilder.Entity("FashionVote.Models.Participant", b =>
                {
                    b.Property<int>("ParticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("TEXT");

                    b.HasKey("ParticipantId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("FashionVote.Models.ParticipantShow", b =>
                {
                    b.Property<int>("ParticipantId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ParticipantId", "ShowId");

                    b.HasIndex("ShowId");

                    b.ToTable("ParticipantShows");
                });

            modelBuilder.Entity("FashionVote.Models.Show", b =>
                {
                    b.Property<int>("ShowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShowName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("ShowId");

                    b.ToTable("Shows");
                });

            modelBuilder.Entity("FashionVote.Models.DesignerShow", b =>
                {
                    b.HasOne("FashionVote.Models.Designer", "Designer")
                        .WithMany("DesignerShows")
                        .HasForeignKey("DesignerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FashionVote.Models.Show", "Show")
                        .WithMany("DesignerShows")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Designer");

                    b.Navigation("Show");
                });

            modelBuilder.Entity("FashionVote.Models.ParticipantShow", b =>
                {
                    b.HasOne("FashionVote.Models.Participant", "Participant")
                        .WithMany("ParticipantShows")
                        .HasForeignKey("ParticipantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FashionVote.Models.Show", "Show")
                        .WithMany("ParticipantShows")
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participant");

                    b.Navigation("Show");
                });

            modelBuilder.Entity("FashionVote.Models.Designer", b =>
                {
                    b.Navigation("DesignerShows");
                });

            modelBuilder.Entity("FashionVote.Models.Participant", b =>
                {
                    b.Navigation("ParticipantShows");
                });

            modelBuilder.Entity("FashionVote.Models.Show", b =>
                {
                    b.Navigation("DesignerShows");

                    b.Navigation("ParticipantShows");
                });
#pragma warning restore 612, 618
        }
    }
}
