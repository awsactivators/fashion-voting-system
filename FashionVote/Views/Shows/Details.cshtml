@model FashionVote.Models.Show

@{
    ViewData["Title"] = "Show Details";
}

<h1>@Model.ShowName</h1>
<p><strong>Location:</strong> @Model.Location</p>
<p><strong>Start Time:</strong> @Model.StartTime.ToString("g")</p>
<p><strong>End Time:</strong> @Model.EndTime.ToString("g")</p>

<hr />

<!-- ✅ Display the Designers Attending the Show -->
<h3>Designers Attending</h3>
@if (Model.DesignerShows != null && Model.DesignerShows.Any())
{
    <ul>
        @foreach (var designerShow in Model.DesignerShows)
        {
            <li>@designerShow.Designer.Name - @designerShow.Designer.Category</li>
        }
    </ul>
}
else
{
    <p>No designers assigned to this show yet.</p>
}

<hr />

<!-- ✅ Display the Participants Attending the Show -->
<h3>Participants Attending</h3>
@if (Model.Participants != null && Model.Participants.Any())
{
    <ul>
        @foreach (var participant in Model.Participants)
        {
            <li>@participant.Name (@participant.Email)</li>
        }
    </ul>
}
else
{
    <p>No participants registered for this show yet.</p>
}

<hr />

<!-- ✅ Voting Form (Now with Multiple Selection) -->
<h3>Vote for Your Favorite Designers</h3>

@if (Model.DesignerShows != null && Model.DesignerShows.Any())
{
    <form asp-controller="Votes" asp-action="Vote" method="post">
        <input type="hidden" name="showId" value="@Model.ShowId" />
        <input type="hidden" name="participantId" value="1" /> <!-- Replace 1 with actual participant ID -->

        @foreach (var designerShow in Model.DesignerShows)
        {
            var hasVoted = Model.Votes != null && Model.Votes.Any(v => v.ParticipantId == 1 && v.DesignerId == designerShow.Designer.DesignerId); // Replace 1 with actual participant ID

            <div class="form-check">
                <input class="form-check-input" type="checkbox" name="designerIds" value="@designerShow.Designer.DesignerId" @(hasVoted ? "disabled" : "")>
                <label class="form-check-label">
                    @designerShow.Designer.Name - @designerShow.Designer.Category
                    @if (hasVoted)
                    {
                        <span class="badge badge-success">✔️ Voted</span> 
                    }
                </label>
            </div>
        }

        <button type="submit" class="btn btn-primary mt-3" @(Model.Votes.Any(v => v.ParticipantId == 1) ? "disabled" : "")>Submit Vote</button>
    </form>
}
else
{
    <p>No designers available for voting.</p>
}



<hr />

<!-- ✅ Back Button -->
<a asp-action="Index" class="btn btn-secondary">Back to List</a>
