@model FashionVote.Models.Show

@{
    ViewData["Title"] = "Vote for Designers";
}

<h1>Vote for Designers in @Model.ShowName</h1>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<p>
    Location: <strong>@Model.Location</strong> <br />
    Time: <strong>@Model.StartTime.ToString("g")</strong> - <strong>@Model.EndTime.ToString("g")</strong>
</p>

@if (!Model.DesignerShows.Any())
{
    <div class="alert alert-info">No designers are available for voting in this show.</div>
}
else
{
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead class="thead-dark vote-thead">
                <tr>
                    <th>Designer</th>
                    <th>Category</th>
                    <th>Status</th>
                    <th>Vote Count</th>
                    <th>Vote</th>
                    <th>Unvote</th>
                    <th>Outfit Upload</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var designerShow in Model.DesignerShows)
                {
                    var hasVoted = Model.Votes != null && Model.Votes.Any(v => v.Participant != null && v.Participant.Email == User.Identity.Name && v.DesignerId == designerShow.DesignerId);
                    var voteCount = Model.Votes != null ? Model.Votes.Count(v => v.DesignerId == designerShow.DesignerId) : 0;
                    var vote = Model.Votes?.FirstOrDefault(v => v.Participant != null && v.Participant.Email == User.Identity.Name && v.DesignerId == designerShow.DesignerId);

                    <tr>
                        <td>@designerShow.Designer.Name</td>
                        <td>@designerShow.Designer.Category</td>
                        <td id="voteStatus-@designerShow.DesignerId">
                            @if (hasVoted)
                            {
                                <span class="badge bg-success">Voted</span>
                            }
                            else
                            {
                                <span class="badge bg-warning">Not Voted</span>
                            }
                        </td>
                        <td id="voteCount-@designerShow.DesignerId">@voteCount</td>
                        <td>
                            @if (!hasVoted)
                            {
                                <form asp-action="SubmitVote" asp-controller="Votes" method="post">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="ShowId" value="@Model.ShowId" />
                                    <input type="hidden" name="DesignerIds" value="@designerShow.DesignerId" />
                                    <button type="submit" class="btn btn-primary btn-sm">Vote</button>
                                </form>
                            }
                            else
                            {
                                <button class="btn btn-secondary btn-sm" disabled>Voted</button>
                            }
                        </td>


                        <td>
                            @if (hasVoted)
                            {
                                <form asp-action="Unvote" asp-controller="Votes" method="post">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="showId" value="@Model.ShowId" />
                                    <input type="hidden" name="designerId" value="@designerShow.DesignerId" />
                                    <button type="submit" class="btn btn-danger btn-sm">Unvote</button>
                                </form>
                            }
                        </td>
                        <td>
                            @if (hasVoted && vote != null)
                            {
                                if (string.IsNullOrEmpty(vote.ImageUrl))
                                {
                                    <form asp-action="UploadImage" asp-controller="Votes" method="post" enctype="multipart/form-data" style="display: inline-block;">
                                        <input type="hidden" name="voteId" value="@vote.VoteId" />
                                        <label for="imageUpload-@designerShow.DesignerId" style="cursor: pointer;">
                                            <i class="fa fa-upload upload-icon" aria-hidden="true"></i>
                                        </label>
                                        <input type="file" id="imageUpload-@designerShow.DesignerId" name="imageFile" accept="image/*" required style="display: none;" onchange="this.form.submit()" />
                                    </form>
                                }
                                else
                                {
                                    <div style="margin-top: 10px;">
                                        <img src="@vote.ImageUrl" alt="Uploaded Outfit" style="width: 80px; height: 80px; object-fit: cover; border-radius: 5px; border: 1px solid #ccc;" />
                                        <div style="margin-top: 10px;">
                                            <form asp-action="UpdateImage" asp-controller="Votes" method="post" enctype="multipart/form-data" style="display: inline-block;">
                                                <input type="hidden" name="voteId" value="@vote.VoteId" />
                                                <label for="updateImage-@designerShow.DesignerId" style="cursor: pointer;">
                                                    <i class="fa fa-pencil edit-icon" aria-hidden="true"></i>
                                                </label>
                                                <input type="file" id="updateImage-@designerShow.DesignerId" name="newImageFile" accept="image/*" required style="display: none;" onchange="this.form.submit()" />
                                            </form>
                                            <form asp-action="DeleteImage" asp-controller="Votes" method="post" style="display: inline-block; margin-left: 10px;">
                                                <input type="hidden" name="voteId" value="@vote.VoteId" />
                                                <button type="submit" class="btn btn-danger btn-sm">
                                                    <i class="fa fa-trash" aria-hidden="true"></i>
                                                </button>
                                            </form>

                                        </div>
                                    </div>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    @* <button type="submit" class="btn btn-primary">Submit Votes</button> *@
}

<a asp-action="MyShows" asp-controller="Shows" class="btn btn-secondary">Back to My Shows</a>

<!-- In your _Layout.cshtml or at the top of your vote page -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />


<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

<script>
    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/voteHub")
        .configureLogging(signalR.LogLevel.Information)
        .build();

    connection.start().catch(function (err) {
        console.error(err.toString());
    });

    connection.on("ReceiveVoteUpdate", function (showId) {
        updateVoteCounts(showId);
    });

    function updateVoteCounts(showId) {
        fetch(`/api/VotesApi/Vote/${showId}`)
            .then(response => response.json())
            .then(data => {
                data.designers.forEach(designer => {
                    var voteStatus = document.getElementById(`voteStatus-${designer.designerId}`);
                    var voteCountElement = document.getElementById(`voteCount-${designer.designerId}`);
                    if (voteCountElement) {
                        voteCountElement.innerText = designer.voteCount;
                    }
                    if (voteStatus) {
                        voteStatus.innerHTML = designer.voteCount > 0 ?
                            `<span class="badge bg-success">Voted</span>` :
                            `<span class="badge bg-warning">Not Voted</span>`;
                    }
                });
            })
            .catch(error => console.error("Error updating votes:", error));
    }
</script>
